steps:
  - name: "gcr.io/cloud-builders/docker"
    id: 'pull cache'
    entrypoint: "bash"
    args:
      - -c
      - docker pull ${_ARTIFACT_REPO}/$PROJECT_ID/dissipate/dissipate-api:latest || exit 0

  - name: 'bash'
    id: 'generate-credentials'
    args:
      - -c
      - |
        echo $$CLOUDBUILD_SERVICE_ACCOUNT > ./api/cloudbuild_credentials.json
    secretEnv: ['CLOUDBUILD_SERVICE_ACCOUNT']

  - name: 'bash'
    id: 'generate-credentials'
    args:
      - -c
      - |
        cat ./api/cloudbuild_credentials.json

  - name: 'gcr.io/cloud-builders/docker'
    id: "docker-compose-setup"
    args: [
      'compose',
      '-f', 'docker-compose.yml',
      '-f', 'docker-compose.cloudbuild.yml',
      'up',
      '-d',
      'postgresql',
      'temporal-db',
      'temporal',
      'firebase-emulator',
    ]
    env: [
      'COMPOSE_HTTP_TIMEOUT=400',
      'TEMPORAL_VERSION=1.17.5',
      'TEMPORAL_UI_VERSION=2.5.1',
      'TEMPORAL_WEB_VERSION=1.15.0',
      'POSTGRESQL_VERSION=13'
    ]

  - name: 'gcr.io/cloud-builders/docker'
    id: "integration-tests"
    waitFor:
      - "docker-compose-setup"
    args: [
      'compose',
      '-f', 'docker-compose.yml',
      '-f', 'docker-compose.cloudbuild.yml',
      'run',
      '-e', 'GOOGLE_APPLICATION_CREDENTIALS=/app/cloudbuild_credentials.json',
      'sonar-scanner'
    ]
    env: [
      'COMPOSE_HTTP_TIMEOUT=400',
      'TEMPORAL_VERSION=1.17.5',
      'TEMPORAL_UI_VERSION=2.5.1',
      'TEMPORAL_WEB_VERSION=1.15.0',
      'POSTGRESQL_VERSION=13'
    ]
    secretEnv: ['SONAR_TOKEN']

  - name: 'docker/compose:1.29.2'
    id: "shut down docker-compose"
    waitFor:
      - "integration-tests"
    args: [
      '-f', 'docker-compose.yml',
      '-f', 'docker-compose.cloudbuild.yml',
      'down'
    ]
    env: [
      'COMPOSE_HTTP_TIMEOUT=400',
      'TEMPORAL_VERSION=1.17.5',
      'TEMPORAL_UI_VERSION=2.5.1',
      'TEMPORAL_WEB_VERSION=1.15.0',
      'POSTGRESQL_VERSION=13'
    ]
    secretEnv: ['SONAR_TOKEN']

timeout: 5000s

options:
  machineType: 'E2_HIGHCPU_8'

images:
  - "${_ARTIFACT_REPO}/$PROJECT_ID/dissipate/dissipate-api:latest"
availableSecrets:
  secretManager:
    # - versionName: projects/$PROJECT_ID/secrets/SONAR_TOKEN/versions/1
    - versionName: projects/510014216261/secrets/SONAR_TOKEN/versions/1
      env: 'SONAR_TOKEN'
    - versionName: projects/510014216261/secrets/cloudbuild-service-account/versions/1
      env: 'CLOUDBUILD_SERVICE_ACCOUNT'

substitutions:
  _ARTIFACT_REPO: us-central1-docker.pkg.dev

