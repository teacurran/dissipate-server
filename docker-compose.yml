services:
  postgresql:
    image: postgis/postgis
    restart: always
    environment:
      POSTGRES_USER: dissipate
      POSTGRES_PASSWORD: dissipate
      POSTGRES_DB: dissipate
    networks:
      - dissipate-network
    volumes:
      - postgres_db:/var/lib/postgresql/data
    ports:
      - "5442:5432"

  temporal-db:
    image: postgres:${POSTGRESQL_VERSION}
    restart: always
    environment:
      POSTGRES_USER: dissipate
      POSTGRES_PASSWORD: dissipate
      POSTGRES_DB: temporal
    networks:
      - dissipate-network
    volumes:
      - temporal_db:/var/lib/postgresql/data
    ports:
      - "5443:5432"

# Cassandra
#  dse_seed_node:
#    image: "datastax/dse-server:6.7.17"
#    environment:
#      - DS_LICENSE=accept
#    # Allow DSE to lock memory with mlock
#    links:
#      - dse_opscenter
#    cap_add:
#      - IPC_LOCK
#    ulimits:
#      memlock: -1
#
#  dse_node:
#    image: "datastax/dse-server:6.7.17"
#    environment:
#      - DS_LICENSE=accept
#      - SEEDS=dse_seed_node
#    links:
#      - dse_seed_node
#      - dse_opscenter
#    # Allow DSE to lock memory with mlock
#    cap_add:
#      - IPC_LOCK
#    ulimits:
#      memlock: -1
#
#  dse_opscenter:
#    image: "datastax/dse-opscenter:6.8.19"
#    ports:
#      - 8888:8888
#    environment:
#      - DS_LICENSE=accept

  temporal:
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    depends_on:
      - temporal-db
    environment:
      - TEMPORAL_ALLOW_NO_AUTH=true
      - DB=postgresql
      - POSTGRES_SEEDS=temporal-db
      - DB_PORT=5432
      - POSTGRES_USER=dissipate
      - POSTGRES_PWD=dissipate
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    networks:
      - dissipate-network
    ports:
      - 7233:7233
    volumes:
      - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig
    labels:
      kompose.volume.type: configMap
  temporal-admin-tools:
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    networks:
      - dissipate-network
    stdin_open: true
    tty: true
  temporal-ui:
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    networks:
      - dissipate-network
    ports:
      - 8081:8080
  temporal-web:
    image: temporalio/web:${TEMPORAL_WEB_VERSION}
    container_name: temporal-web
    depends_on:
      - temporal
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
      - TEMPORAL_PERMIT_WRITE_API=true
    networks:
      - dissipate-network
    ports:
      - 8088:8088

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16685:16685"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "4317:4317"
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    networks:
      - dissipate-network

  firebase-emulator:
    image: andreysenov/firebase-tools
    volumes:
      - ./firebase-emulator/:/home/node
    ports:
      - "4000:4000"
      - "5001:5000"
      - "8085:8085"
      - "9000:9000"
      - "9005:9005"
      - "9099:9099"
      - "9199:9199"
    command: firebase emulators:start --project dissipate --import /home/node/data
    networks:
      - dissipate-network

#  redis:
#    image: "redis:alpine"
#    restart: always
#    ports:
#      - '6379:6379'
#    command: redis-server --save 20 1 --loglevel warning --requirepass 98puOInkjbO&YiubkBt8guhvjhvredrg

  flyway:
    image: api-server
    build:
      context: ./api
      dockerfile: src/main/docker/dev-jvm.dockerfile
    networks:
      - dissipate-network
    depends_on:
      - postgresql
    volumes:
      - ./api:/app
      - maven_target:/app/target
      - maven_cache:/app/.m2
    command:
      - mvn
      - flyway:migrate
      - -Dflyway.url=jdbc:postgresql://postgresql:5432/dissipate
      - -Dflyway.user=dissipate
      - -Dflyway.password=dissipate

  api:
    image: api-server
    build:
      context: ./api
      dockerfile: src/main/docker/dev-jvm.dockerfile
    depends_on:
      - postgresql
      - firebase-emulator
      - flyway
      - temporal
    networks:
      - dissipate-network
    volumes:
      - ./api:/app
      - ~/.config/gcloud:/tmp/.config/gcloud
      - maven_cache:/app/.m2
      # use virtual volume if having issues with native binaries
      # - maven_target:/app/target
    environment:
      SERVICE: local
      FIREBASE_AUTH_EMULATOR_HOST: "firebase-emulator:9099"
      FIREBASE_STORAGE_EMULATOR_HOST: "firebase-emulator:9199"
      GCLOUD_PROJECT: "dissipate"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: 98puOInkjbO&YiubkBt8guhvjhvredrg
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/.config/gcloud/application_default_credentials.json
      quarkus.datasource.reactive.url: vertx-reactive:postgresql://postgresql:5432/dissipate
      quarkus.temporal.service.url: temporal:7233
      quarkus.datasource.username: dissipate
      quarkus.datasource.password: dissipate
      quarkus.hibernate-orm.database.generation: update
      quarkus.http.host: 0.0.0.0
      quarkus.opentelemetry.tracer.exporter.otlp.endpoint: http://jaeger:4317
    command: mvn quarkus:dev -Ddebug=true -DdebugHost=0.0.0.0
    ports:
      - "5005:5005"
      - "8080:8080"
      - "9299:9000"

volumes:
  postgres_db:
  maven_cache:
  maven_target:
  temporal_db:

networks:
  dissipate-network:
    name: dissipate-network
