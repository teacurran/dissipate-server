version: "3.9"

x-api-base: &api-base
  image: api-server
  build:
    context: ./api
    dockerfile: src/main/docker/dev-jvm.dockerfile
  depends_on:
    - main-db
    - main-db-migrations
    - jaeger
  volumes:
    - ./api:/app
    - ~/.config/gcloud:/tmp/.config/gcloud
    # - maven_cache:/app/.m2
    # use virtual volume if having issues with native binaries
    # - maven_target:/app/target
  environment:
    SERVICE: local
    GCLOUD_PROJECT: "dissipate"
    REDIS_HOST: redis
    REDIS_PORT: 6379
    REDIS_PASSWORD: 98puOInkjbO&YiubkBt8guhvjhvredrg
    GOOGLE_APPLICATION_CREDENTIALS: /tmp/.config/gcloud/application_default_credentials.json
    QUARKUS_DATASOURCE_REACTIVE_URL: vertx-reactive:postgresql://main-db:5432/dissipate
    QUARKUS_DATASOURCE_USERNAME: dissipate
    QUARKUS_DATASOURCE_PASSWORD: dissipate
    QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: update
    QUARKUS_HTTP_HOST: 0.0.0.0
    QUARKUS_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://jaeger:4317
    QUARKUS_MAILER_HOST: mailpit
    QUARKUS_MAILER_PORT: 1025
    QUARKUS_MAILPIT_HTTP_SERVER: http://mailpit:8025
  command:
    mvn
    quarkus:dev
    -Ddebug=true
    -DdebugHost=0.0.0.0

x-kafka-base: &kafka-base
  image: "wurstmeister/kafka:2.13-2.8.1"
  depends_on:
    - zookeeper

x-kafka-env: &kafka-env
  KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  KAFKA_CREATE_TOPICS: "posts:3:1"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

services:
  api:
    image: api-server
    build:
      context: ./api
      dockerfile: src/main/docker/dev-jvm.dockerfile
    depends_on:
      - main-db
      - main-db-migrations
      - jaeger
    volumes:
      - ./api:/app
      - ~/.config/gcloud:/tmp/.config/gcloud
      # - maven_cache:/app/.m2
      # use virtual volume if having issues with native binaries
      # - maven_target:/app/target
    environment:
      SERVICE: local
      GCLOUD_PROJECT: "dissipate"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: 98puOInkjbO&YiubkBt8guhvjhvredrg
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/.config/gcloud/application_default_credentials.json
      QUARKUS_DATASOURCE_REACTIVE_URL: vertx-reactive:postgresql://main-db:5432/dissipate
      QUARKUS_DATASOURCE_USERNAME: dissipate
      QUARKUS_DATASOURCE_PASSWORD: dissipate
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: update
      QUARKUS_HTTP_HOST: 0.0.0.0
      QUARKUS_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://jaeger:4317
    command:
      mvn
      quarkus:dev
      -Ddebug=true
      -Dquarkus.http.host=0.0.0.0
      -DdebugHost=0.0.0.0
      -P development
    ports:
      - "5005:5005"
      - "8080:8080"
      - "9299:9000"

  main-db:
    image: postgis/postgis
    restart: always
    environment:
      POSTGRES_USER: dissipate
      POSTGRES_PASSWORD: dissipate
      POSTGRES_DB: dissipate
    volumes:
      - main-db:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16685:16685"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "4317:4317"
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      LOG_LEVEL: debug

  #  redis:
#    image: "redis:alpine"
#    restart: always
#    ports:
#      - '6379:6379'
#    command: redis-server --save 20 1 --loglevel warning --requirepass 98puOInkjbO&YiubkBt8guhvjhvredrg

  main-db-migrations:
    image: api-server
    build:
      context: ./api
      dockerfile: src/main/docker/dev-jvm.dockerfile
    depends_on:
      - main-db
    volumes:
      - ./api:/app
      - maven_target:/app/target
      - maven_cache:/app/.m2
    command:
      - mvn
      - flyway:migrate
      - -Dflyway.url=jdbc:postgresql://main-db:5432/dissipate
      - -Dflyway.user=dissipate
      - -Dflyway.password=dissipate

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - ./data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  integration-tests:
    <<: *api-base
    command: mvn verify

#  kafka-server1:
#    <<: *kafka-base
#    ports:
#      - '29092:29092'
#    environment:
#      <<: *kafka-env
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-server1:9092,OUTSIDE://localhost:29092
#      KAFKA_LISTENERS: INSIDE://kafka-server1:9092,OUTSIDE://kafka-server1:29092
#
#  kafka-cat-internal:
#    image: confluentinc/cp-kafkacat
#    entrypoint: "kafkacat"
#    command: "-b kafka-server1:9092 -L -v"
#    profiles: ["development"]
#
#  kafka-cat-external:
#    image: confluentinc/cp-kafkacat
#    entrypoint: "kafkacat"
#    command: "-b host.docker.internal:29092 -L -d all"
#    profiles: ["development"]
#
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - '8080:8080'
#    environment:
#      KAFKA_CLUSTERS_0_NAME: dclocal-cluster
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-server1:9092
#    profiles: ["development"]

  sonar-scanner:
    <<: *api-base
    volumes:
      - ./:/app
      - ~/.config/gcloud:/tmp/.config/gcloud
    command:
      - mvn
      - verify
      - sonar:sonar
      - -Dsonar.token=${SONAR_TOKEN}
      - -Dsonar.host.url=https://sonarcloud.io
      - -DGOOGLE_APPLICATION_CREDENTIALS=/app/cloudbuild_credentials.json
      - -e

#  zookeeper:
#    image: 'wurstmeister/zookeeper:latest'
#    ports:
#      - '22181:2181'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes

volumes:
  main-db:
  maven_cache:
  maven_target:
  mailpit_data:

